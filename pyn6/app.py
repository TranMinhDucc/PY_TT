import os


def create_weekly_log():
    try:
        week = int(input("Nh·∫≠p s·ªë tu·∫ßn: "))
        hours = float(input("Nh·∫≠p s·ªë gi·ªù l√†m vi·ªác: "))
        tasks = int(input("Nh·∫≠p s·ªë nhi·ªám v·ª• ho√†n th√†nh: "))
        notes = input("Nh·∫≠p ghi ch√∫: ")

        filename = f"week_{week}.txt"
        with open(filename, "w", encoding="utf-8") as file:
            file.write(f"Tu·∫ßn: {week}\n")
            file.write(f"S·ªë gi·ªù l√†m vi·ªác: {hours}\n")
            file.write(f"Nhi·ªám v·ª• ho√†n th√†nh: {tasks}\n")
            file.write(f"Ghi ch√∫: {notes}\n")

        print(f"ƒê√£ t·∫°o nh·∫≠t k√Ω tu·∫ßn {week}")
    except ValueError:
        print("L·ªói: Vui l√≤ng nh·∫≠p ƒë√∫ng ƒë·ªãnh d·∫°ng s·ªë.")


def read_weekly_log():
    try:
        week = int(input("Nh·∫≠p s·ªë tu·∫ßn c·∫ßn ƒë·ªçc: "))
        filename = f"week_{week}.txt"
        if os.path.exists(filename):
            with open(filename, "r", encoding="utf-8") as file:
                print("\n--- N·ªôi dung nh·∫≠t k√Ω ---")
                print(file.read())
        else:
            print(f"Nh·∫≠t k√Ω tu·∫ßn {week} kh√¥ng t·ªìn t·∫°i.")
    except ValueError:
        print("L·ªói: Vui l√≤ng nh·∫≠p s·ªë tu·∫ßn h·ª£p l·ªá.")


def update_weekly_log():
    try:
        week = int(input("Nh·∫≠p s·ªë tu·∫ßn c·∫ßn c·∫≠p nh·∫≠t: "))
        hours = float(input("Nh·∫≠p s·ªë gi·ªù m·ªõi: "))
        tasks = int(input("Nh·∫≠p s·ªë nhi·ªám v·ª• m·ªõi: "))
        notes = input("Nh·∫≠p ghi ch√∫ m·ªõi: ")

        filename = f"week_{week}.txt"
        with open(filename, "w", encoding="utf-8") as file:
            file.write(f"Tu·∫ßn: {week}\n")
            file.write(f"S·ªë gi·ªù l√†m vi·ªác: {hours}\n")
            file.write(f"Nhi·ªám v·ª• ho√†n th√†nh: {tasks}\n")
            file.write(f"Ghi ch√∫: {notes}\n")

        print(f"ƒê√£ c·∫≠p nh·∫≠t nh·∫≠t k√Ω tu·∫ßn {week}")
    except ValueError:
        print("L·ªói: Vui l√≤ng nh·∫≠p ƒë√∫ng ƒë·ªãnh d·∫°ng.")


def delete_weekly_log():
    try:
        week = int(input("Nh·∫≠p s·ªë tu·∫ßn c·∫ßn x√≥a: "))
        filename = f"week_{week}.txt"
        if os.path.exists(filename):
            os.remove(filename)
            print(f"üóëÔ∏è ƒê√£ x√≥a nh·∫≠t k√Ω tu·∫ßn {week}")
        else:
            print(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y nh·∫≠t k√Ω tu·∫ßn {week}")
    except ValueError:
        print("L·ªói: Nh·∫≠p s·ªë tu·∫ßn kh√¥ng h·ª£p l·ªá.")


def generate_summary():
    total_weeks = 0
    total_hours = 0.0
    total_tasks = 0

    for file in os.listdir():
        if file.startswith("week_") and file.endswith(".txt"):
            total_weeks += 1
            with open(file, "r", encoding="utf-8") as f:
                lines = f.readlines()
                for line in lines:
                    if "S·ªë gi·ªù l√†m vi·ªác:" in line:
                        total_hours += float(line.strip().split(":")[1])
                    elif "Nhi·ªám v·ª• ho√†n th√†nh:" in line:
                        total_tasks += int(line.strip().split(":")[1])

    print("\nüìä B√°o c√°o t·ªïng k·∫øt:")
    print(f"T·ªïng s·ªë tu·∫ßn: {total_weeks}")
    print(f"T·ªïng s·ªë gi·ªù l√†m vi·ªác: {total_hours}")
    print(f"T·ªïng nhi·ªám v·ª• ho√†n th√†nh: {total_tasks}")


def main():
    while True:
        print("\n Menu:")
        print("1. T·∫°o nh·∫≠t k√Ω tu·∫ßn m·ªõi")
        print("2. ƒê·ªçc nh·∫≠t k√Ω tu·∫ßn")
        print("3. C·∫≠p nh·∫≠t nh·∫≠t k√Ω tu·∫ßn")
        print("4. X√≥a nh·∫≠t k√Ω tu·∫ßn")
        print("5. T·∫°o b√°o c√°o t·ªïng k·∫øt")
        print("6. Tho√°t")

        choice = input("Ch·ªçn ch·ª©c nƒÉng (1-6): ")

        if choice == "1":
            create_weekly_log()
        elif choice == "2":
            read_weekly_log()
        elif choice == "3":
            update_weekly_log()
        elif choice == "4":
            delete_weekly_log()
        elif choice == "5":
            generate_summary()
        elif choice == "6":
            print("üëã Tho√°t ch∆∞∆°ng tr√¨nh. T·∫°m bi·ªát!")
            break
        else:
            print("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng nh·∫≠p s·ªë t·ª´ 1 ƒë·∫øn 6.")


if __name__ == "__main__":
    main()
